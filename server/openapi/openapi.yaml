openapi: 3.0.0
info:
  title: ts-lens
  description: ts-lens
  version: 0.0.3
servers:
  - url: 'https://lens-api.k3l.io'
paths:
  /profile_score:
    get:
      summary: Display a user's profile score
      description: |
        Returns the global profile score of a user based on a strategy.
      operationId: getScore
      parameters:
        - $ref: "#/components/parameters/StrategyId"
          required: true
        - $ref: "#/components/parameters/ProfileHandle"
          required: true
        - $ref: "#/components/parameters/Backdate"
      responses:
        200:
          description: Query succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Profile"
                description: |
                  A numeric profile's score, between 0 and 1.
        400:
          $ref: "#/components/responses/HTTP400ErrorMessage"
        500:
          $ref: "#/components/responses/HTTP500ErrorMessage"
  /profile_scores:
    get:
      summary: Return a paginated list of all profile scores
      description: |
        Returns the global profile scores, ordered by the highest scoring profiles, 
        according to a given strategy.
      operationId: getScores
      parameters:
        - $ref: "#/components/parameters/StrategyId"
          required: true
        - $ref: "#/components/parameters/PaginationOffset"
        - $ref: "#/components/parameters/PaginationLimit"
        - $ref: "#/components/parameters/Backdate"
        - $ref: "#/components/parameters/Hex"
      responses:
        200:
          description: Query succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Profile"
                description: |
                  The requested profiles, whose scores are
                  within the `[limit, limit+offset)` range.
        400:
          $ref: "#/components/responses/HTTP400ErrorMessage"
        500:
          $ref: "#/components/responses/HTTP500ErrorMessage"
  /profile_count:
    get:
      summary: Return the total population size of profiles scored
      description: |
        Returns the number of profiles available for a given strategy.
        
        As an example, this can be used to display the number of 
        pages on a paginated dashboard.
      operationId:
        getNumberOfProfiles
      parameters:
        - $ref: "#/components/parameters/StrategyId"
          required: true
        - $ref: "#/components/parameters/Backdate"
      responses:
        200:
          description: Query succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: |
                      The number of ranking entries (with non-zero trust).
                required:
                  - count
        400:
          $ref: "#/components/responses/HTTP400ErrorMessage"
        500:
          $ref: "#/components/responses/HTTP500ErrorMessage"
  /profile_rank:
    get:
      summary: Provide the ranked position of a given profile
      description: |
        Retrieves a particular profile's position ranked in relations 
        to the result set of a strategy.
      operationId: getProfilePosition
      parameters:
        - $ref: "#/components/parameters/StrategyId"
          required: true
        - $ref: "#/components/parameters/ProfileHandle"
          required: true
        - $ref: "#/components/parameters/Backdate"
      responses:
        200:
          description: Query succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  rank:
                    type: integer
                    description: Display a profile's ranking based on strategy specified.
                required:
                  - rank
        400:
          $ref: "#/components/responses/HTTP400ErrorMessage"
        500:
          $ref: "#/components/responses/HTTP500ErrorMessage"
components:
  parameters:
    StrategyId:
      name: strategy_id
      in: query
      schema:
        type: integer
      description: The strategy ID of representing the pre-trust and local-trust EigenTrust heuristics.
    ProfileHandle:
      name: handle
      in: query
      schema:
        type: string
      description: The Lens profile handle (with or without the `.lens` extension).
    PaginationOffset:
      name: offset
      in: query
      schema:
        type: integer
      description: Return results starting from this offset position.  Defaults to start at `0`, the first result.
    PaginationLimit:
      name: limit
      in: query
      schema:
        type: integer
      description: Number of entries to return.  Defaults to `50`.
    Backdate:
      name: date
      in: query
      schema:
        type: string
      description: |
        A date, in `YYYY-MM-DD` format, for which to return the historic result.  Defaults to the most recent date.
    Hex:
      name: hex
      in: query
      schema:
        type: string
      description: |
        Set to `true` in order to return the Lens Profile IDs in hexadecimal format `0x...`, defaults to numeric IDs
  responses:
    HTTP400ErrorMessage:
      description: |
        Invalid request, ex: wrong parameters.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
    HTTP500ErrorMessage:
      description: |
        Internal server error, not caused by issues with the request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
  schemas:
    ErrorMessage:
      description: A human-readable error message.
      type: string
    Profile:
      description: A user profile.
      type: object
      properties:
        id:
          oneOf:
            - type: integer
            - type: string
          description: Lens profile ID, returns a hexadecimal string when `hex` is set to `true`
        handle:
          type: string
          description: Lens profile handle.
        followersCount:
          type: integer
          description: Number of followers.
        score:
          type: number
          description: Profile score of a user, ranges from 0 to 1
        rank:
          type: integer
          description: Ranking of a user, beginning with zero.
      required:
        - id
        - handle
        - followersCount
      examples:
        - id: 0x5
          handle: stani.lens
          followersCount: 49371
          score: 0.06392881
          rank: 0
        - id: 0x24
          handle: bradorbradley.lens
          followersCount: 813
          score: 0.056683067
          rank: 1
        - id: 0x16264
          handle: ryanfox.lens
          followersCount: 813
          score: 0.05656492
          rank: 2
